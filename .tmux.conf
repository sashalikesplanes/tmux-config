# Make tmux colors nice
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Make escape mode fast in neovim
set -sg escape-time 0

# Change prefix
set -g prefix C-Space
unbind C-b
bind-key C-Space send-prefix

# Set windows and panes to start at index 1
set -g base-index 1
setw -g pane-base-index 1

# change window splitting shortcuts
unbind %
unbind '"'
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Client attached - fill in started_at
# Client detached - remove started_at, add a time log for that session
# Client switched to session - remove started_at, add a time log for that session, fill started_at for new session
# set-hook -g client-attached 'run-shell "tmux-time-tracker attached #{session_name}"'
# set-hook -g client-detached 'run-shell "tmux-time-tracker detached #{session_name}"'
# set-hook -g client-session-changed 'run-shell "tmux-time-tracker changed #{session_name}"'

# Easy tmux refresh
unbind r
bind r source-file ~/.tmux.conf

# Resizing panes
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

# quick launch session switch
unbind s
bind s run-shell -b "~/.tmux/plugins/tmux-fzf/scripts/session.sh switch"

# Maximize minimize panes
bind -r m resize-pane -Z

# Enable mouse mode
set -g mouse on

# Vim movements for copy mode
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection # start selection with v
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy with y

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?l?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode after dragging mouse

# Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'

# Fuzzy search sessions
set -g @plugin 'sainnhe/tmux-fzf'

# Catpuccin theme
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'mocha'
set -g @catppuccin_window_default_text "#{b:pane_current_path}"
set -g @catppuccin_date_time "%Y-%m-%d %H:%M %H:%M"
set -g @catppuccin_window_tabs_enabled on # or off to disable window_tabs

# NOTE these must be last for autosave feature to work properly
# tmux plugins for restoric sessions
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux after restart
set -g @plugin 'tmux-plugins/tmux-continuum' # autosave tmux sessions
set -g @resurrect-capture-pange-contents 'on' # allow tmux-ressurect to capture pane content
set -g @continuum-restore 'on' # enable tmux-continuum

# Initialize TMUX pluging manage (keep at bottom)
run '~/.tmux/plugins/tpm/tpm'

display-message 'tmux config reloaded'
